<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.3 
  http://maven.apache.org/xsd/assembly-1.1.3.xsd">
  <id>${project.artifactId}-assembly-${project.version}</id>
  <!-- 默认为 true, 设为 false, 防止将 ${project.finalName} 作为根目录打进 WAR 包 -->
  <!-- true  结构: ${project.finalName}.war/${project.finalName}/WEB-INF -->
  <!-- false 结构: ${project.finalName}.war/WEB-INF -->
  <includeBaseDirectory>false</includeBaseDirectory>
  <!-- 设置为 WAR 包格式 -->
  <formats>
    <format>zip</format>
  </formats>
  <fileSets>
  
    <!-- 将 target/classes 下的文件输出到 WEB-INF/classes, 同时排除 target/classes/conf/*.properties -->
    <fileSet>
      <directory>${project.build.outputDirectory}</directory> <!-- target/classes -->
      <outputDirectory>WEB-INF/classes</outputDirectory>
      <excludes>
        <exclude>**/conf/*.properties</exclude>
        <exclude>**/log4j.xml</exclude>
      </excludes>
    </fileSet>
    
    <!-- 将 env/${env} 下的配置文件输出到 WEB-INF/classes/conf, 实现 -P 不同的参数打包出不同的配置 -->
    <!-- ${env} 的值由 -P 的参数传递进来, 如：-Ptest, 那么, ${env} 的值就是 test -->
    <fileSet>
      <directory>${project.basedir}/env/${env}/prop</directory>
      <outputDirectory>WEB-INF/classes/conf</outputDirectory>
    </fileSet>
    
    <fileSet>
      <directory>${project.basedir}/env/${env}/xml</directory>
      <outputDirectory>WEB-INF/classes</outputDirectory>
    </fileSet>
    
    <!-- 将 webapp 下的文件输出到 WAR 包 -->
    <fileSet>
      <directory>${project.basedir}/src/main/webapp</directory>
      <outputDirectory>/</outputDirectory>
    </fileSet>
    
  </fileSets>
  <!-- 将项目依赖的JAR包输出到 WEB-INF/lib -->
  <dependencySets>
    <dependencySet>
      <outputDirectory>WEB-INF/lib</outputDirectory>
      <!-- 
      <useProjectArtifact>true</useProjectArtifact>
   	  <scope>runtime</scope>
   	   -->
    </dependencySet>
  </dependencySets>
  
</assembly>